<tool id="soapdenovo_contig" name="Contig" version="0.1.0">

    <description>with SOAPdenovo</description>

    <macros>
        <import>soapdenovo_macros.xml</import>
    </macros>

    <expand macro="requirements"/>

    <stdio></stdio>

    <version_command></version_command>

    <command><![CDATA[
      `cp $reads_info_file reads_info_file`

      &&

      #for $file in $graph_files
        `cp $file.graph_file "graph_file"$file.graph_name`
      #end for

      &&

      #if $max_kmer_size == "63"
          SOAPdenovo-63mer contig
      #else
          SOAPdenovo-127mer contig
      #end if
        -s $config_file
        -o "outputGraph"

        -g "graph_file"

        $resolve_repeats 

        #if $merge_level
          -M $merge_level
        #end if

        #if $cov_cutoff
          -D $cov_cutoff
        #end if

        #if $arc_weight
          -e $arc_weight
        #end if

        #if $define_multi_kmer == "true":
          -m $define_multi_kmer.max_kmer
          -s reads_info_file
          -p \${GALAXY_SLOTS:-4}
          -E $define_multi_kmer.merge_bubble
        #end if
]]>      
    </command>

    <inputs>
      <param name="max_kmer_size" label="Maximal kmer size" type="select" help="">
            <option value="63" selected="True">63</option>
            <option value="127">127</option>
      </param>

      <param type="data" name="config_file" format="txt" label="Input configuration file" help="(-s)"/>

      <repeat name="graph_files" title="Input graphs">
        <param type="data" name="graph_file" format="txt" label="Input graph file" help="(-g)"/>
        <param type="text" name="graph_name" label="Name of input graph" help=""/>
      </repeat>

  		<param name="resolve_repeats" type="boolean" label="Resolve repeats" truevalue="-R" falsevalue="" help="Resolve repeats using information generated in pregraph step, works only if -R is set in pregraph step too (-R)" />

  		<param name="merge_level" type="integer" min="0" max="3" value="1" label="Merge level" optional="True" help="the strength of merging similar sequences during contiging, between 0 and 3" />

  		<param name="cov_cutoff" type="integer" value="1" label="Edge coverage cutoff" optional="True" help="edges shorter than (2*K+1) with coverage no larger than EdgeCovCutoff will be deleted" />

  		<param name="arc_weight" type="integer" value="0" label="Arc weight" optional="True" help="two edges, between which the arc's weight is larger than arcWeight, will be linerized" />

      <conditional>
        <param name="define_multi_kmer" type="select" label="Use multi-kmer?" help="">
          <option value="true" selected="true">Yes</option>
          <option value="false">No</option>
        </param>

        <when value="true">
      		<param name="max_kmer" type="integer" label="max k when using multi-kmer" optional="True" help="max k when using multi-kmer, and the parameters below are used along with multi-kmer" />

          <param type="data" name="reads_info_file" format="txt" label="Reads info file" optional="True" help="The file contains information of solexa reads. (It's necessary when using multi-kmer)"/>

      		<param name="merge_bubble" type="boolean" label="Merge clean bubble" truevalue="-E" falsevalue="" optional="True" help="Merge clean bubble before iterate, works only if -M is set when using multi-kmer"/>
        </when>

        <when value="false"/>
      </conditional>
    </inputs>

    <outputs>
  		<data format="txt" name="contigs" label="${tool.name} on ${on_string}: Contigs" from_work_dir="outputGraph.contig"/>
  		<data format="txt" name="arcs" label="${tool.name} on ${on_string}: Arcs" from_work_dir="outputGraph.Arc"/>
  		<data format="txt" name="edges" label="${tool.name} on ${on_string}: Updated Edges" from_work_dir="outputGraph.updated.edge" />
  		<data format="txt" name="contigindex" label="${tool.name} on ${on_string}: Contig Index" from_work_dir="outputGraph.ContigIndex"/>
    </outputs>

    <tests>
    </tests>

    <expand macro="help"/>
    
    <expand macro="citations"/>
</tool>
